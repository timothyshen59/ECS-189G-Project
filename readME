The project trains Recurrent Neural Networks (RNN) in the context of text classification and text generation

How to Run Text Classification
1) Navigate to script_classification.py file in PyCharm
    - location: local_code/script/stage_4_script/script_classification.py
2) Right click on the file and click "Run 'script_classification'"
    - This will call classes and functions within code/code/stage_4_code/ to train and evaluate the model

Outputs
    - Test Accuracy
    - For each epoch, output Accuracy, F1-Score, Precision, Recall, Loss
    - Plots on Training Loss Curve/Accuracy/F1-Score/Precision/Recall over epochs for most recent runs
    - Saved under code/result/stage_4_result as a png

How to Run Text Generation
1) Navigate to script_generation.py file in PyCharm
    - location: local_code/script/stage_4_script/script_generation.py
2) Right click on the file and click "Run 'script_generation'"
    - This will call classes and functions within code/code/stage_4_code/ to train and evaluate the model

Output
    - A joke generated by the model given a starting phrase
        1) To change the starting phrase for the joke, navigate to Joke_Method_RNN.py under local_code/stage_4_code/Joke_Method_RNN.py
        2) Scroll down to the run() method and change the phrases within the start_texts array

The following files will NOT be included in the repository due to GitHub's 100 MB file size limit
    - classification_dataset.pt (used in text classification)
    - vocab_dict.pth (used in text generation)
However, these files can be generated by running their respective scripts